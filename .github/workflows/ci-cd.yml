

name: CI/CD pipeline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]



jobs:
 test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare unit tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r ./services/Authenticate_user/requirements.txt
          pip install -r ./services/Contacts/requirements.txt
      - name: Run unit tests
        run: |
          python ./services/Authenticate_user/test.py
          python -m pytest ./services/Contacts/text.py

 build-and-push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx

        uses: docker/setup-buildx-action@v1
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#da
      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push


 build-and-push-to-yc:
    name: Build and push to YandexCloud Registry
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build  -f ./services/Authenticate_user/Dockerfile ./services/Authenticate_user/ --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/register-service:latest

      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push tag YC Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/register-service:latest

 deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push-to-yc]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/register-service:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
            #revision-env: |
            #POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}
